#name: build-linux
#
#on:
#  push:
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  buildLinuxDebug:
#    name: build-linux
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Install Packages
#      run: |
#        sudo apt update -qq
#        sudo apt install -y git build-essential g++ make zip unzip
#        sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev
#    - name: Fetch git submodules
#      run: git submodule update --init --recursive
#
#    - name: premake5
#      run: ./premake5 gmake2
#
#    - name: make Debug x64
#      run: make config=debug_x64
#
#  buildLinuxRelease:
#    name: build-linux
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Install Packages
#      run: |
#        sudo apt update -qq
#        sudo apt install -y git build-essential g++ make zip unzip
#        sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev
#    - name: Fetch git submodules
#      run: git submodule update --init --recursive
#
#    - name: premake5
#      run: ./premake5 gmake2
#
#    - name: make Dist x64
#      run: make config=release_x64
#
#  buildLinuxDist:
#    name: build-linux
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Install Packages
#      run: |
#        sudo apt update -qq
#        sudo apt install -y git build-essential g++ make zip unzip
#        sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev
#    - name: Fetch git submodules
#      run: git submodule update --init --recursive
#
#    - name: premake5
#      run: ./premake5 gmake2
#
#    - name: make Dist x64
#      run: make config=dist_x64
#
#    - name: zip release
#      run: cp Basetor/bin/Dist-linux-x86_64/Editor/Editor Basetor/Editor && zip -r Basetor.zip Basetor/assets Basetor/Editor
#
#    - uses: "marvinpinto/action-automatic-releases@latest"
#      with:
#        repo_token: "${{ secrets.GITHUB_TOKEN }}"
#        automatic_release_tag: "${{ steps.commit.outputs.short }}"
#        title: "Ubuntu Dist Build"
#        prerelease: false
#        draft: false
#        files: |
#          *.zip
